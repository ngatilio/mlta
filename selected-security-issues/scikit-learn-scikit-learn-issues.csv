url,title,comments,state,created_at,closed_at,
,,,,,,0
https://api.github.com/repos/scikit-learn/scikit-learn/issues/18891,b'Segmentation fault on SVMLIB',"[b'This issue was assigned CVE-2020-28975', b""`    clf._n_support[0] = 1000000`\r\n\r\nIt's expected that manually changing a private attribute will lead to wrong results, or even segfault as is the case here.\r\n\r\nMay I ask why you want to change the number of SVs, and why you expected it to work? Changing it likely leads the program to overshoot indexing in an array somewhere. For ref, there are 7 SVs for class `0`."", b'It should not segfault but fail gracefully.', b""The snippet above is changing a *private* attribute (it has a leading underscore).\r\n\r\nBy definition, these aren't supposed to be changed by the user. When they're used by the estimator, it's fair to assume that they are properly set to a correct value.\r\n\r\nWe can't safe-guard against every single misuse, and this is a misuse."", b'Consider the common scenario when a model is trained in a research machine and then transfered for production use to live environment, if a malicious actor is able to take a hold of the model and change it,  it should not be able to trigger a segmentation fault, please bear in mind the segfaults may have security implications other than crashing the process.', b""> if a malicious actor\r\n\r\nThis is where it's out of scope here: we can't guard against everything. We have a responsibility to provide safe code when that code is used under the limits of what's a normal use-case, but that's pretty much it. Private attributes shouldn't be modified, and it's up to users to make sure that the estimator isn't maliciously altered.\r\n\r\nI might go on a limb and use a poor analogy but when I buy a car, I can't complain that it breaks if I replace the steering wheel by a potato.\r\n\r\nIf you really want to prevent segfaults, maybe you can intercept the `SIGSEGV`?"", b'To reuse you example: If someone switches the steering wheel for a potato, the car should not completelly break/fail unrecoverably the moment you turn it on and if it happens it would be considered a security risk would it no? You would not just say the driver to wear a helmet instead or would you?', b'Pickles are unsafe in any case. If you submit a pull request to avoid the\nsegfault we can consider it.\n', b'There are other ways to export a model which are not via pickle, and this does not require pickle at all.', b'> This is where it\'s out of scope here: we can\'t guard against everything.\r\n\r\nIsn\'t the model loader improperly validating the model and then segfaulting?  Is pickle the only way to load a model?\r\n\r\nThe proof of concept exploit code is just using the private attribute to shorten the example.  Perhaps it should have used a comment there describing ""loading a model with a modified n value""?  \r\n\r\nThis high CVE score is tripping up people trying to use scikit learn in regulated and secure environments.  ', b'>  This high CVE score is tripping up people trying to use scikit learn in regulated and secure environments.\r\n\r\nHmm, yes https://nvd.nist.gov/vuln/detail/CVE-2020-28975 and those are really used for enterprise deployment. We could do a bit more sanity checks in https://github.com/scikit-learn/scikit-learn/blob/b43f057b22dead2e98669b8f7931eaf86d24b1d1/sklearn/svm/_libsvm.pyx#L279 to make that CVE go await, even if it would be difficult to be fully fail proof. A PR would be welcome.']",closed,11/21/2020 14:40,10/20/2021 12:30,22
,,,,,,0
https://api.github.com/repos/scikit-learn/scikit-learn/issues/21336,b'FIX Prevents segfault in SVC when internals are altered',"[b'> The check can also be performed in __setstate__.\r\n\r\nI think checking before calling the low level functions, as done currently, is better, since this is also an issue without pickling.', b'I moved the entry of the changelog in 1.0.1 and tag it for backport']",closed,10/15/2021 0:09,10/20/2021 12:30,4
,,,,,,0
https://api.github.com/repos/scikit-learn/scikit-learn/issues/20922,b'Packaged jQuery version is vulnerable',"[b'The only thing that should use `jQuery` is linked to the website generation. The library itself will not use it.\r\nWe could try to bump the version and see if we can still build the website properly.', b'Yeah, I kinda figured it wouldn\'t be directly utilizing in, but I wasn\'t smart enough to know the ""why"" that you just provided. I appreciate you clearing that up for me, I just wanted to let you guys know that the scan is as dumb as I am. Thanks for your time though. I Hope any attempt to bump the version goes smoothly, take care!', b'The version on the current stable site is 3.5.1: https://scikit-learn.org/stable/_static/jquery.js and on the dev site: https://scikit-learn.org/dev/_static/jquery.js\r\n\r\nThe jquery in the repo is not used anymore for generating the site. I opened #20962 to remove the previous sphinx theme.']",closed,9/2/2021 19:01,9/8/2021 11:17,6
,,,,,,0
https://api.github.com/repos/scikit-learn/scikit-learn/issues/17714,b'Upgrade jQuery to version 3.5 to solve CVE-2020-11022',[b'Thanks! Would you be interested in submitting a PR?'],closed,6/25/2020 4:45,8/14/2020 8:19,2
,,,,,,34
